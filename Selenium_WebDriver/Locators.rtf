{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
{\colortbl ;\red255\green0\blue0;\red0\green0\blue0;\red0\green0\blue255;}
{\*\generator Riched20 10.0.17134}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\f0\fs22\lang9                                                                            "Locators"\par
********************************************************************************\par
locators are the ways to identify an element on webpages,\line In selenium there are 8 locators,\line 1.tagname,\line 2.ID,\line 3.className,\line 4.name,\line 5.linkTest,\line 6.partialLinkTest,\line 7.cssSelector,(user define locator)\line 8.xpath,(user define locator)\par
*** Steps to identify an element on a webage:\par
Step:A\line approach1: right click on element and choose inspect\line approach2: when right click is disable then use this approach.\line a) go to any webpage and press F12\line b) click an element\line c) click on select icons and move cursor on any element\line d) click on element.\par
Step:B\line depending on html tag and its attribute choose a locator.\line Step:C\line depending on the locators call 'By' class method and store the object in reference.\line note: By is a predefine class in Selenium.\line By class contain all locator as a method, eg,\line\line class By\par
\{\par
1.. public statis By tagname(Sting tagname)\line\{\line By ref= new By()\line return ref:\line\}\line 2.. public static By id(String id)\line\{\line By ref= new By()\line return ref:\line\}\line --------------------\line --------------------\line --------------------\line 8.. public static By id(String id)\line\{\line By ref= new By()\line return ref:\line\}\line\}\line                                                                       By ob=By.tagname(input)\line\line step:4,\line **use findElement methods to identify the Element on webpage to identify the element\line on webpage and pass Byclass reference,\line **findElement will identify an element on a webpage and it returns the refrence of webElement\line **webElement is an Interface\line\line                                                         WebElement element = driver.findElement(ob)\line ****************************************************************************\line                                                                       Point to be remember\line ****************************************************************************\par
before start this topic there is something to know about, and that is return statement.\line eg.\line returning reference variable.\line\line example:1\line class A\{\line public static void t1()\line\{\line ----------------------------\line    method body\line ---------------------------- //implicit default return statement thats why flow of execution\line                                           //return back to main method this is know as method binding\line\}\line public static void main()\line\{\line A.t1();----------------->calling static method by class name\line\}\line\}\par
\line class B\{\line public static B sample()\line\{\line A ref= new A();\line return ref;\line\}\line public static void main()\line\{\line A obj=B.sample();\line since we are calling a method sample with the help of class B, and sample method itself calling a class A and it will return the reference of class A, since main method will return the ref of class type A, it have to store in the reference variable only in class B..\par
\}\par
\}\par
********************************************************************************\line                                        1.   \cf1\fs24 Identify Element On webPage using tagname.\line\cf2 ************************************************************************\cf1\par
\line 1.<input type = "text"/>\line 2.Locator-> tagname->input\line 3.By obj= By.tagname("input")\line 4.WebElement element=driver.findElement(ob)\line                                                  or\par
5.WebElement element=driver.findElement(By.tagname("input"));\line //WebElement--->interface;\line //element--->refrence;\line //driver---->refrence of webpage;\line //findElement--->nonStatic method\line //By--->class\line //tagname--->static method\line  meaning of line no 5 is:\line Call the WebElement on the WebPage By the tagname called input.\line\line\line\cf2 ************************************************************************\cf1\par
                                  2.  identify the Element on webPage using id\line\cf2 ************************************************************************\cf1\line\line 1.<input type= "text" name ="username" value="" id="username" placeholder ="username">\line 2.locator---->id---->username\line 3.By ref=By.id("username");\line 4.WebElement element=driver.findElement(ref);\line                                                  or\line 5.WebElement element=driver.findElement(By.id("username")\par
\line\cf2 ************************************************************************\cf1\line                                  3. identify the element on webpage using classname\line\cf2 ************************************************************************\cf1\line\line 1.<input type= "text"  value=""  class ="LM6RPg"  title="search for products">\line 2.locator---->classname---->LM6RPg\line 3.By ref=By.className("LM6RPg");\line 4.WebElement element=driver.findElement(ref);\line                                                  or\line 5.WebElement element=driver.findElement(By.className("LM6RPg"));\par
\line\cf2 ************************************************************************\cf1\line                                    4.  identify the element on webpage using attribute:\line\cf2 ************************************************************************\cf1\line\par
1.<input type= "password"  value=""  name ="pwd"  placeholder="password">\line 2.locator---->name---->pwd\line 3.By ref=By.name("pwd");\line 4.WebElement element=driver.findElement(ref);\line                                                  or\line 5.WebElement element=driver.findElement(By.name("pwd"));\par
\line\cf2 ************************************************************************\cf1\line                                      5.  identify the element on webpage using linkText:\line\cf2 ************************************************************************\cf1\line\line                 "If a text exist b/w  open and close 'a' tag, it is called as 'linkText' "\line <p> welcome to Software Testing learning class</p>.//this is not a linktext\line <a href=" ">Email</a>//this is a linktext\line eg.\par
1.<a href ="{{\field{\*\fldinst{HYPERLINK https://mail.google.com/mail/?tab=wm }}{\fldrslt{https://mail.google.com/mail/?tab=wm\ul0\cf0}}}}\f0\fs24 ">Gmail</a>\line 2.locator--->linkText--->Gmail\line 3.By ref=By.linkText("Gmail");\line 4.WebElement element =driver.findElement(ref);\line                                  or\line 5.WebElement element=driver.findElement(By.linkText("Gmail"));\par
\line\cf2 ************************************************************************\cf1\line                                  6.  identify the element on webpage using partiallinkText:\line\cf2 ************************************************************************\cf1\line "if a linkText is to long use partial linkText"\line\line 1.<a href ="{\cf0{\field{\*\fldinst{HYPERLINK https://mail.google.com/mail/?tab=wm }}{\fldrslt{https://mail.google.com/mail/?tab=wm\ul0\cf0}}}}\f0\fs24 ">this is a software testing tutorial where i will tell you about selenium basics also</a>\line 2.locator--->partialLinkText--->this is a software testing tutorial\line 3.By ref=By.partialLinkText("this is a software testing tutorial");\line 4.WebElement element =driver.findElement(ref);\line                                  or\line 5.WebElement element=driver.findElement(By.partialLinkText("this is a software testing tutorial"));\line\par
\line\line\line SS\par
}
 